% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mts_join2.R
\name{mts_join2}
\alias{mts_join2}
\title{Join \code{mts} objects along the time axis}
\usage{
mts_join2(mts1 = NULL, mts2 = NULL)
}
\arguments{
\item{mts1}{\emph{mts} object}

\item{mts2}{\emph{mts} object}
}
\value{
A joined \code{mts} object with an extended time range.
}
\description{
Create a merged timeseries using two \emph{mts}
objects. If \emph{mts} objects are non-contiguous, the resulting \emph{mts}
will have a regular hourly \code{datetime} axis with temporal gaps filled
with \code{NA}.

For each timeseries found in \code{mts1} and \code{mts2}, data are
placed on an extended time axis covering both \emph{mts} objects.

This is useful when the same \code{deviceDeploymentID} appears in different
\emph{mts} objects representing different time periods. The returned
\emph{mts} object will cover both time periods.

Any gap between the end of the earlier \emph{mts} object and the start of the
later \emph{mts} object will be filled with missing values to guarantee a
regular houly axis.

Missing values will also be used whenever a \code{deviceDeploymentID} found in
one \emph{mts} object is missing from the other. The returned \emph{mts}
object will contain all \code{deviceDeploymentIDs} found in \code{mts1} or
\code{mts2}.

Overlaps will be treated with a "later is better" sensibility. Any data
records with timestamps found in both \emph{mts} objects will be removed from
the earlier \emph{mts} object (\emph{i.e.} the one whose last record is earlier).
}
\note{
An error is generated if the incoming \emph{mts} objects have
non-identical metadata for shared \code{deviceDeploymentIDs}.
}
\examples{
library(MazamaTimeSeries)

ids1 <- sample(example_mts$meta$deviceDeploymentID, 7)
ids2 <- sample(example_mts$meta$deviceDeploymentID, 5)

mts1 <-
  example_mts \%>\%
  mts_filterMeta(deviceDeploymentID \%in\% ids1) \%>\%
  sts_filterDate(20190701, 20190703)

mts2 <-
  example_mts \%>\%
  mts_filterMeta(deviceDeploymentID \%in\% ids2) \%>\%
  sts_filterDate(20190705, 20190708)

mts <- mts_join2(mts1, mts2)

}
