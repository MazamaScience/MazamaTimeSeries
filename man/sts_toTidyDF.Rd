% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sts_toTidyDF.R
\name{sts_toTidyDF}
\alias{sts_toTidyDF}
\title{Convert a SingleTimeSeries object to a tidy dataframe}
\usage{
sts_toTidyDF(
  sts = NULL,
  metaColumns = c("deviceDeploymentID", "siteName", "longitude", "latitude"),
  sizeMax = 100
)
}
\arguments{
\item{sts}{\emph{sts} object to convert.}

\item{metaColumns}{Spatial metadata to include in the tidy dataframe}

\item{sizeMax}{Maximum allowable size (in MB) for the resulting dataframe.}
}
\value{
Tidy dataframe containing data and metadata.
}
\description{
Converts a \emph{sts} object to a single, tidy
dataframe containing all varaibles from \code{sts$data} along with
values from \code{sts$meta} as specified in \code{metaColumns}:

Replicating time-invariant spatial metadata for every record greatly inflates
the size of the data but also makes it much more useful when working with the
\pkg{dplyr} and \code{ggplot2} packages.

Tidy dataframes constructed in this manner be combined with
\code{dplyr::bind_rows()} and used to create multi-sensor plots.
}
\examples{
\dontrun{
library(MazamaTimeSeries)

# A look at the 'sts' object
dplyr::glimpse(example_sts)

# Now add default spatial metadata
tidyDF <- sts_toTidyDF(example_sts)
dplyr::glimpse(tidyDF)
}

}
